// Generated by CoffeeScript 1.9.3
(function() {
  var XmlDocument, http;

  http = require("http");

  XmlDocument = require("xmldoc").XmlDocument;

  exports.processWebContent = function(data) {
    var ex, location, temperature, xmldocument;
    try {
      xmldocument = new XmlDocument(data);
      location = xmldocument.descendantWithPath("channel.yweather:location");
      temperature = xmldocument.descendantWithPath("channel.item.yweather:condition");
      return [location.attr.city, location.attr.region, temperature.attr.temp];
    } catch (_error) {
      ex = _error;
      return [];
    }
  };

  exports.sortResults = function(result) {
    return result.sort(function(a, b) {
      var state1, state2;
      state1 = a[0].toLowerCase();
      state2 = b[0].toLowerCase();
      if (state1 < state2) {
        return -1;
      }
      if (state1 > state2) {
        return 1;
      }
      return 0;
    });
  };

  exports.getContentFromWeb = function(woeid, callback) {
    var data, processResponse;
    data = "";
    processResponse = function(response) {
      var getChunk, sendData;
      getChunk = function(responseData) {
        data += responseData;
      };
      sendData = function() {
        callback(data.replace(/\n/g, ""));
      };
      response.on("data", getChunk);
      response.on("end", sendData);
    };
    http.get("http://weather.yahooapis.com/forecastrss?w=" + woeid, processResponse);
  };

  exports.readFile = function(fileName, callbackErr, callbackData) {
    var fs, getFileContent;
    fs = require("fs");
    getFileContent = function(error, data) {
      if (error) {
        callbackErr(error);
      } else {
        callbackData(data);
      }
    };
    fs.readFile(fileName, "utf8", getFileContent);
  };

  exports.getWeatherDetails = function(filename, callBackProcessError, callBackProcessResult) {
    var processFileData;
    processFileData = function(data) {
      var processSingleWoeid, results, woeids;
      woeids = data.split("\r\n");
      results = [];
      processSingleWoeid = function(woeid) {
        var collectResultsFromWeb;
        collectResultsFromWeb = function(data) {
          results.push(exports.processWebContent(data));
          if (results.length === woeids.length) {
            callBackProcessResult(exports.sortResults(results));
          }
        };
        exports.getContentFromWeb(woeid, collectResultsFromWeb);
      };
      woeids.forEach(processSingleWoeid);
    };
    exports.readFile(filename, callBackProcessError, processFileData);
  };

}).call(this);
